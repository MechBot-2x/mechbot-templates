name: MechBot Supercharged CI
on:
  push:
    branches: [main]
  pull_request:
    branches: ['*']

env:
  PYTHON_VERSION: '3.10'
  DJANGO_SETTINGS_MODULE: 'backend.settings'

jobs:
  validate-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest pytest-cov bandit black
      
      - name: Validate YAML files
        run: python scripts/validate_yaml.py
      
      - name: Run Django tests
        run: |
          cd backend
          if [ -f "manage.py" ]; then
            python manage.py test --noinput
          else
            pytest tests/ -v --cov=. --cov-report=xml
          fi
        env:
          CI: true
      
      - name: Security scan with Bandit
        run: bandit -r backend -ll

  quality-assurance:
    runs-on: ubuntu-latest
    needs: validate-and-test
    steps:
      - uses: actions/checkout@v4
      
      - name: Code formatting check (Black)
        run: black --check backend/
      
      - name: Run static type checking
        run: |
          pip install mypy
          mypy --ignore-missing-imports backend/

  deploy-preview:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: quality-assurance
    steps:
      - uses: actions/checkout@v4
      
      - name: Docker build
        run: docker build -t mechbot-backend .
        
      # üöÄ NOTIFICACI√ìN MEJORADA DE SLACK
      - name: Notify Slack - Start Deploy
        if: always()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: 'deployments'
          payload: |
            {
              "text": "üöÄ MechBot Deploy Started",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "ü§ñ *MechBot Deployment*\n*Status:* Starting...\n*Branch:* `${{ github.ref_name }}`\n*Commit:* `${{ github.sha }}`"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Workflow"
                      },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
      
      - name: Notify Slack - Deploy Result
        if: always()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: 'deployments'
          payload: |
            {
              "text": "${{ job.status == 'success' && '‚úÖ MechBot Deploy Success' || '‚ùå MechBot Deploy Failed' }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "ü§ñ *MechBot Deployment*\n*Status:* ${{ job.status == 'success' && '‚úÖ Success' || '‚ùå Failed' }}\n*Branch:* `${{ github.ref_name }}`\n*Author:* ${{ github.actor }}\n*Duration:* ${{ job.status == 'success' && '~2min' || 'Failed' }}"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "${{ job.status == 'success' && 'View App' || 'View Logs' }}"
                      },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}

  # üî• NUEVO JOB: Notificaci√≥n de PR
  notify-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: quality-assurance
    steps:
      - name: Notify Slack - PR Update
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: 'development'
          payload: |
            {
              "text": "üîÑ PR Update - MechBot",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "üîÑ *Pull Request Update*\n*Title:* ${{ github.event.pull_request.title }}\n*Author:* ${{ github.actor }}\n*Status:* ${{ needs.quality-assurance.result == 'success' && '‚úÖ Tests Passed' || '‚ùå Tests Failed' }}"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Review PR"
                      },
                      "url": "${{ github.event.pull_request.html_url }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
