name: MechBot Supercharged CI

on:
  push:
    branches: [main]
  pull_request:
    branches: ['*']

env:
  PYTHON_VERSION: '3.10'
  DJANGO_SETTINGS_MODULE: 'backend.settings'

jobs:
  validate-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'  # Cache autom√°tico de dependencias

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest pytest-cov bandit black

      - name: Validate YAML files
        run: python scripts/validate_yaml.py

      - name: Run Django tests
        run: |
          cd backend
          if [ -f "manage.py" ]; then
            python manage.py test --noinput
          else
            pytest tests/ -v --cov=. --cov-report=xml
          fi
        env:
          CI: true

      - name: Security scan with Bandit
        run: bandit -r backend -ll

  quality-assurance:
    runs-on: ubuntu-latest
    needs: validate-and-test
    steps:
      - uses: actions/checkout@v4

      - name: Code formatting check (Black)
        run: black --check backend/

      - name: Run static type checking
        run: |
          pip install mypy
          mypy --ignore-missing-imports backend/

  deploy-preview:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: quality-assurance
    steps:
      - uses: actions/checkout@v4
      
      - name: Docker build
        run: docker build -t mechbot-backend .
        
      - name: Notify Slack
        uses: slackapi/slack-github-action@v1
        with:
          channel-id: 'deployments'
          status: ${{ job.status }}
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
